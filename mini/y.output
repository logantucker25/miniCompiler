Grammar

    0 $accept: program $end

    1 program: extern extern func

    2 extern: EXTERN VOID PRINT '(' INT ')' ';'
    3       | EXTERN INT READ '(' ')' ';'

    4 func: INT NAME '(' INT NAME ')' block
    5     | INT NAME '(' ')' ';' block

    6 block: '{' decs stmnts '}'
    7      | '{' stmnts '}'
    8      | stmnt

    9 decs: decs dec
   10     | dec

   11 dec: INT NAME ';'

   12 stmnts: stmnts stmnt
   13       | stmnt

   14 stmnt: NAME '=' expr ';'
   15      | if_s
   16      | while_s
   17      | print_s
   18      | return_s

   19 if_s: IF '(' equ ')' block ELSE block
   20     | IF '(' equ ')' block

   21 while_s: WHILE '(' equ ')' block

   22 print_s: PRINT '(' expr ')' ';'

   23 return_s: RETURN '(' expr ')' ';'

   24 expr: '-' term
   25     | term '+' term
   26     | term '-' term
   27     | term '*' term
   28     | term '/' term
   29     | term

   30 equ: term '<' term
   31    | term '>' term
   32    | term LE term
   33    | term GE term
   34    | term NE term
   35    | term EQ term

   36 term: VALUE
   37     | NAME


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 3 4 5 19 20 21 22 23
')' (41) 2 3 4 5 19 20 21 22 23
'*' (42) 27
'+' (43) 25
'-' (45) 24 26
'/' (47) 28
';' (59) 2 3 5 11 14 22 23
'<' (60) 30
'=' (61) 14
'>' (62) 31
'{' (123) 6 7
'}' (125) 6 7
error (256)
NAME (258) 4 5 11 14 37
VALUE (259) 36
EXTERN (260) 2 3
VOID (261) 2
INT (262) 2 3 4 5 11
PRINT (263) 2 22
READ (264) 3
IF (265) 19 20
ELSE (266) 19
WHILE (267) 21
RETURN (268) 23
EQ (269) 35
NE (270) 34
GE (271) 33
LE (272) 32
UMINUS (273)
IFX (274)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
extern (34)
    on left: 2 3, on right: 1
func (35)
    on left: 4 5, on right: 1
block (36)
    on left: 6 7 8, on right: 4 5 19 20 21
decs (37)
    on left: 9 10, on right: 6 9
dec (38)
    on left: 11, on right: 9 10
stmnts (39)
    on left: 12 13, on right: 6 7 12
stmnt (40)
    on left: 14 15 16 17 18, on right: 8 12 13
if_s (41)
    on left: 19 20, on right: 15
while_s (42)
    on left: 21, on right: 16
print_s (43)
    on left: 22, on right: 17
return_s (44)
    on left: 23, on right: 18
expr (45)
    on left: 24 25 26 27 28 29, on right: 14 22 23
equ (46)
    on left: 30 31 32 33 34 35, on right: 19 20 21
term (47)
    on left: 36 37, on right: 24 25 26 27 28 29 30 31 32 33 34 35


state 0

    0 $accept: . program $end

    EXTERN  shift, and go to state 1

    program  go to state 2
    extern   go to state 3


state 1

    2 extern: EXTERN . VOID PRINT '(' INT ')' ';'
    3       | EXTERN . INT READ '(' ')' ';'

    VOID  shift, and go to state 4
    INT   shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: extern . extern func

    EXTERN  shift, and go to state 1

    extern  go to state 7


state 4

    2 extern: EXTERN VOID . PRINT '(' INT ')' ';'

    PRINT  shift, and go to state 8


state 5

    3 extern: EXTERN INT . READ '(' ')' ';'

    READ  shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    1 program: extern extern . func

    INT  shift, and go to state 10

    func  go to state 11


state 8

    2 extern: EXTERN VOID PRINT . '(' INT ')' ';'

    '('  shift, and go to state 12


state 9

    3 extern: EXTERN INT READ . '(' ')' ';'

    '('  shift, and go to state 13


state 10

    4 func: INT . NAME '(' INT NAME ')' block
    5     | INT . NAME '(' ')' ';' block

    NAME  shift, and go to state 14


state 11

    1 program: extern extern func .

    $default  reduce using rule 1 (program)


state 12

    2 extern: EXTERN VOID PRINT '(' . INT ')' ';'

    INT  shift, and go to state 15


state 13

    3 extern: EXTERN INT READ '(' . ')' ';'

    ')'  shift, and go to state 16


state 14

    4 func: INT NAME . '(' INT NAME ')' block
    5     | INT NAME . '(' ')' ';' block

    '('  shift, and go to state 17


state 15

    2 extern: EXTERN VOID PRINT '(' INT . ')' ';'

    ')'  shift, and go to state 18


state 16

    3 extern: EXTERN INT READ '(' ')' . ';'

    ';'  shift, and go to state 19


state 17

    4 func: INT NAME '(' . INT NAME ')' block
    5     | INT NAME '(' . ')' ';' block

    INT  shift, and go to state 20
    ')'  shift, and go to state 21


state 18

    2 extern: EXTERN VOID PRINT '(' INT ')' . ';'

    ';'  shift, and go to state 22


state 19

    3 extern: EXTERN INT READ '(' ')' ';' .

    $default  reduce using rule 3 (extern)


state 20

    4 func: INT NAME '(' INT . NAME ')' block

    NAME  shift, and go to state 23


state 21

    5 func: INT NAME '(' ')' . ';' block

    ';'  shift, and go to state 24


state 22

    2 extern: EXTERN VOID PRINT '(' INT ')' ';' .

    $default  reduce using rule 2 (extern)


state 23

    4 func: INT NAME '(' INT NAME . ')' block

    ')'  shift, and go to state 25


state 24

    5 func: INT NAME '(' ')' ';' . block

    NAME    shift, and go to state 26
    PRINT   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    '{'     shift, and go to state 31

    block     go to state 32
    stmnt     go to state 33
    if_s      go to state 34
    while_s   go to state 35
    print_s   go to state 36
    return_s  go to state 37


state 25

    4 func: INT NAME '(' INT NAME ')' . block

    NAME    shift, and go to state 26
    PRINT   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    '{'     shift, and go to state 31

    block     go to state 38
    stmnt     go to state 33
    if_s      go to state 34
    while_s   go to state 35
    print_s   go to state 36
    return_s  go to state 37


state 26

   14 stmnt: NAME . '=' expr ';'

    '='  shift, and go to state 39


state 27

   22 print_s: PRINT . '(' expr ')' ';'

    '('  shift, and go to state 40


state 28

   19 if_s: IF . '(' equ ')' block ELSE block
   20     | IF . '(' equ ')' block

    '('  shift, and go to state 41


state 29

   21 while_s: WHILE . '(' equ ')' block

    '('  shift, and go to state 42


state 30

   23 return_s: RETURN . '(' expr ')' ';'

    '('  shift, and go to state 43


state 31

    6 block: '{' . decs stmnts '}'
    7      | '{' . stmnts '}'

    NAME    shift, and go to state 26
    INT     shift, and go to state 44
    PRINT   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30

    decs      go to state 45
    dec       go to state 46
    stmnts    go to state 47
    stmnt     go to state 48
    if_s      go to state 34
    while_s   go to state 35
    print_s   go to state 36
    return_s  go to state 37


state 32

    5 func: INT NAME '(' ')' ';' block .

    $default  reduce using rule 5 (func)


state 33

    8 block: stmnt .

    $default  reduce using rule 8 (block)


state 34

   15 stmnt: if_s .

    $default  reduce using rule 15 (stmnt)


state 35

   16 stmnt: while_s .

    $default  reduce using rule 16 (stmnt)


state 36

   17 stmnt: print_s .

    $default  reduce using rule 17 (stmnt)


state 37

   18 stmnt: return_s .

    $default  reduce using rule 18 (stmnt)


state 38

    4 func: INT NAME '(' INT NAME ')' block .

    $default  reduce using rule 4 (func)


state 39

   14 stmnt: NAME '=' . expr ';'

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50
    '-'    shift, and go to state 51

    expr  go to state 52
    term  go to state 53


state 40

   22 print_s: PRINT '(' . expr ')' ';'

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50
    '-'    shift, and go to state 51

    expr  go to state 54
    term  go to state 53


state 41

   19 if_s: IF '(' . equ ')' block ELSE block
   20     | IF '(' . equ ')' block

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    equ   go to state 55
    term  go to state 56


state 42

   21 while_s: WHILE '(' . equ ')' block

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    equ   go to state 57
    term  go to state 56


state 43

   23 return_s: RETURN '(' . expr ')' ';'

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50
    '-'    shift, and go to state 51

    expr  go to state 58
    term  go to state 53


state 44

   11 dec: INT . NAME ';'

    NAME  shift, and go to state 59


state 45

    6 block: '{' decs . stmnts '}'
    9 decs: decs . dec

    NAME    shift, and go to state 26
    INT     shift, and go to state 44
    PRINT   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30

    dec       go to state 60
    stmnts    go to state 61
    stmnt     go to state 48
    if_s      go to state 34
    while_s   go to state 35
    print_s   go to state 36
    return_s  go to state 37


state 46

   10 decs: dec .

    $default  reduce using rule 10 (decs)


state 47

    7 block: '{' stmnts . '}'
   12 stmnts: stmnts . stmnt

    NAME    shift, and go to state 26
    PRINT   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    '}'     shift, and go to state 62

    stmnt     go to state 63
    if_s      go to state 34
    while_s   go to state 35
    print_s   go to state 36
    return_s  go to state 37


state 48

   13 stmnts: stmnt .

    $default  reduce using rule 13 (stmnts)


state 49

   37 term: NAME .

    $default  reduce using rule 37 (term)


state 50

   36 term: VALUE .

    $default  reduce using rule 36 (term)


state 51

   24 expr: '-' . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 64


state 52

   14 stmnt: NAME '=' expr . ';'

    ';'  shift, and go to state 65


state 53

   25 expr: term . '+' term
   26     | term . '-' term
   27     | term . '*' term
   28     | term . '/' term
   29     | term .

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 29 (expr)


state 54

   22 print_s: PRINT '(' expr . ')' ';'

    ')'  shift, and go to state 70


state 55

   19 if_s: IF '(' equ . ')' block ELSE block
   20     | IF '(' equ . ')' block

    ')'  shift, and go to state 71


state 56

   30 equ: term . '<' term
   31    | term . '>' term
   32    | term . LE term
   33    | term . GE term
   34    | term . NE term
   35    | term . EQ term

    '>'  shift, and go to state 72
    '<'  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    GE   shift, and go to state 76
    LE   shift, and go to state 77


state 57

   21 while_s: WHILE '(' equ . ')' block

    ')'  shift, and go to state 78


state 58

   23 return_s: RETURN '(' expr . ')' ';'

    ')'  shift, and go to state 79


state 59

   11 dec: INT NAME . ';'

    ';'  shift, and go to state 80


state 60

    9 decs: decs dec .

    $default  reduce using rule 9 (decs)


state 61

    6 block: '{' decs stmnts . '}'
   12 stmnts: stmnts . stmnt

    NAME    shift, and go to state 26
    PRINT   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    '}'     shift, and go to state 81

    stmnt     go to state 63
    if_s      go to state 34
    while_s   go to state 35
    print_s   go to state 36
    return_s  go to state 37


state 62

    7 block: '{' stmnts '}' .

    $default  reduce using rule 7 (block)


state 63

   12 stmnts: stmnts stmnt .

    $default  reduce using rule 12 (stmnts)


state 64

   24 expr: '-' term .

    $default  reduce using rule 24 (expr)


state 65

   14 stmnt: NAME '=' expr ';' .

    $default  reduce using rule 14 (stmnt)


state 66

   27 expr: term '*' . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 82


state 67

   28 expr: term '/' . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 83


state 68

   25 expr: term '+' . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 84


state 69

   26 expr: term '-' . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 85


state 70

   22 print_s: PRINT '(' expr ')' . ';'

    ';'  shift, and go to state 86


state 71

   19 if_s: IF '(' equ ')' . block ELSE block
   20     | IF '(' equ ')' . block

    NAME    shift, and go to state 26
    PRINT   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    '{'     shift, and go to state 31

    block     go to state 87
    stmnt     go to state 33
    if_s      go to state 34
    while_s   go to state 35
    print_s   go to state 36
    return_s  go to state 37


state 72

   31 equ: term '>' . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 88


state 73

   30 equ: term '<' . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 89


state 74

   35 equ: term EQ . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 90


state 75

   34 equ: term NE . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 91


state 76

   33 equ: term GE . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 92


state 77

   32 equ: term LE . term

    NAME   shift, and go to state 49
    VALUE  shift, and go to state 50

    term  go to state 93


state 78

   21 while_s: WHILE '(' equ ')' . block

    NAME    shift, and go to state 26
    PRINT   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    '{'     shift, and go to state 31

    block     go to state 94
    stmnt     go to state 33
    if_s      go to state 34
    while_s   go to state 35
    print_s   go to state 36
    return_s  go to state 37


state 79

   23 return_s: RETURN '(' expr ')' . ';'

    ';'  shift, and go to state 95


state 80

   11 dec: INT NAME ';' .

    $default  reduce using rule 11 (dec)


state 81

    6 block: '{' decs stmnts '}' .

    $default  reduce using rule 6 (block)


state 82

   27 expr: term '*' term .

    $default  reduce using rule 27 (expr)


state 83

   28 expr: term '/' term .

    $default  reduce using rule 28 (expr)


state 84

   25 expr: term '+' term .

    $default  reduce using rule 25 (expr)


state 85

   26 expr: term '-' term .

    $default  reduce using rule 26 (expr)


state 86

   22 print_s: PRINT '(' expr ')' ';' .

    $default  reduce using rule 22 (print_s)


state 87

   19 if_s: IF '(' equ ')' block . ELSE block
   20     | IF '(' equ ')' block .

    ELSE  shift, and go to state 96

    $default  reduce using rule 20 (if_s)


state 88

   31 equ: term '>' term .

    $default  reduce using rule 31 (equ)


state 89

   30 equ: term '<' term .

    $default  reduce using rule 30 (equ)


state 90

   35 equ: term EQ term .

    $default  reduce using rule 35 (equ)


state 91

   34 equ: term NE term .

    $default  reduce using rule 34 (equ)


state 92

   33 equ: term GE term .

    $default  reduce using rule 33 (equ)


state 93

   32 equ: term LE term .

    $default  reduce using rule 32 (equ)


state 94

   21 while_s: WHILE '(' equ ')' block .

    $default  reduce using rule 21 (while_s)


state 95

   23 return_s: RETURN '(' expr ')' ';' .

    $default  reduce using rule 23 (return_s)


state 96

   19 if_s: IF '(' equ ')' block ELSE . block

    NAME    shift, and go to state 26
    PRINT   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    '{'     shift, and go to state 31

    block     go to state 97
    stmnt     go to state 33
    if_s      go to state 34
    while_s   go to state 35
    print_s   go to state 36
    return_s  go to state 37


state 97

   19 if_s: IF '(' equ ')' block ELSE block .

    $default  reduce using rule 19 (if_s)
